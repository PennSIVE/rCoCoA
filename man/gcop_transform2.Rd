% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimator_cop.R
\name{gcop_transform2}
\alias{gcop_transform2}
\title{Transform (X,Y) to a Gaussian copula with N(0,1) marginals}
\usage{
gcop_transform2(dat_xyz_u, F_x = NULL, F_y = NULL)
}
\arguments{
\item{dat_xyz_u}{a data frame where the first column is X (untransformed) and the second column is Y (untransformed)}

\item{F_x}{the distribution function of X}

\item{F_y}{the distribution function of Y}
}
\value{
The original data frame with the columns of X and Y replaced by their transformed values.
}
\description{
Transform (X,Y) to a Gaussian copula with N(0,1) marginals using a quantile transform.
}
\details{
Given \eqn{n} observations of X, Y, and their distribution functions \code{F_x, F_y}, use a quantile
transform so that the transformed (X,Y) follows a Gaussian copula with marginal N(0,1) distributions. If \code{F_x, F_y}
are not supplied, then the empirical distribution function is used.
}
\examples{
T = as.numeric(rbernoulli(n = n, p = 0.5))
Z = rep(NA, times = n)
for (i in 1:n){
Z[i] <- if (T[i] == 1){
# Z|T=1 ~ Bernoulli(0.3)
as.numeric(purrr::rbernoulli(n = 1, p = 0.3))
} else {
# Z|T=0 ~ Bernoulli(0.9)
as.numeric(purrr::rbernoulli(n = 1, p = 0.9))
}
}
# Simulate X,Y given Z,T, and Z*T using a normal copula with gamma and beta marginals.
dat_zt0 <- data.frame(Z = Z, T = T, ZT = Z*T)
XY = sim_xy2_mvn(theta0 = c(0, 0, 0, 0), dat_zt0 = dat_zt0,
mu_x = 0, mu_y = 0, sd_x = 1, sd_y = 1)
X_t = qgamma(bound_away(pnorm(XY$x, mean = 0, sd = 1)), shape = 2,  rate = 1) # Gamma(2,1)
Y_t = qbeta(bound_away(pnorm(XY$y, mean = 0, sd = 1)), shape1 = 2, shape2 = 2) # Beta(2,2)
dat_xyz = data.frame(X = X_t, Y = Y_t)
dat_xyz = cbind(dat_xyz, dat_zt0)

# If the marginal distributions are knonw, but arams unknown, estimate with MLE
mle_x = rCoCoA:::get_gamma_params(dat_x = X_t)
F_x = function(p) pgamma(p, shape=mle_x[1],  rate=mle_x[2])
mle_y = rCoCoA:::get_beta_params(dat_x = Y_t)
F_y = function(p) pbeta(p,shape1 = mle_y[1], shape2 = mle_y[1])
dat_xyz = gcop_transform2(dat_xyz, F_x = F_x, F_y = F_y)

}
